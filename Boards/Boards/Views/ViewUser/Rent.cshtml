@model Boards.Models.Board

@{
    ViewData["Title"] = "Rent";
}

<h1>Rent</h1>




    <h4>Board</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Length)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Length)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Width)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Width)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Thickness)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Thickness)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Volume)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Volume)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Equipment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Equipment)
        </dd>
        <div class="col-sm-2-center">
            <h5>@Html.DisplayNameFor(model => model.Image)</h5>
        </div>
        <div class="col-sm-10-center">
            <img src="@Model.Image" alt="None item" width="300" height="300">
        </div>
    </dl>


<div class="row">
  <div class="col-md-4">
    <form asp-action="Rent">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div> 
        <input type="hidden" asp-for="RowVersion" />
            <div class="form-group">
            <label asp-for="StartDate" class="control-label">  </label>
            <input type="datetime-local" asp-for="StartDate" class="form-control"/>
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EndDate" class="control-label">  </label>
            <input type="datetime-local" asp-for="EndDate" class="form-control" />
            <span asp-validation-for="EndDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Rent" class="btn btn-primary"
        </div>
     </form>
   </div>
</div>
<script>
    // Function to update the datetime-local input field with the current date and time
    function updateDateTimeField() {
        var currentDate = new Date();
        var formattedDate = currentDate.toISOString().slice(0, 16);

        // Set the value of the input fields to the current date and time
        document.getElementById("startDateInput").value = formattedDate;
        document.getElementById("endDateInput").value = formattedDate;
    }

    // Update the field initially
    updateDateTimeField();

    // Update the field every second (1000 milliseconds)
    setInterval(updateDateTimeField, 1000);
</script>