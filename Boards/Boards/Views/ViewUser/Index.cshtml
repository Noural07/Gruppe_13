@model PaginatedList<Boards.Models.Board>


@{
    ViewData["Title"] = "Index";
}

<h1>Boards</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index" style="color:#12d6e3">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                <a asp-action="Index" style="color:#12d6e3" asp-route-sortOrder="@ViewData["LengthSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Length</a>

            </th>
            <th>
                Width 
            </th>
            <th>
                Thickness
            </th>
      
            <th>
               Volume
            </th>
            <th>
                <a asp-action="Index" style="color:#12d6e3" asp-route-sortOrder="@ViewData["TypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Type</a>
            </th>
            <th>
               Price
            </th>
            <th>
               Equipment
            </th>
            <th>
                Image
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>


@foreach (var item in Model) {
            @if (item.Reserved == false)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Length) feet
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Width) inches
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Thickness) inches
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Volume) L
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price) €
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Equipment)
                    </td>
                    <td>

                        <img src="@item.Image" alt="None item" width="64" height="64">
                    </td>
                    <td>
                        <a asp-action="Details" style="color:#12d6e3" asp-route-id="@item.ID"> Details </a> 
                    </td>
                </tr>
            }
            else {
                
            }
            

        }
        
    </tbody>
</table>@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
